export struct TrackData {
    name: string,
    index: string,
    mute: bool,
    solo: bool,
}

component MuteButtons inherits Rectangle {
    height: 20px;
    width: 40px;
    HorizontalLayout {
        Rectangle {
            height: 20px;
            width: 20px;
            background: #ffffff;
            border-width: 1px;
            border-color: #000000;
            border-top-left-radius: 5px;
            border-bottom-left-radius: 5px;
            muteTouchArea := TouchArea { width: parent.width; height: parent.height; }
            Text { text: "M"; color: black; }
            states [
                hover when muteTouchArea.has-hover: {
                    background: #ffcccc;
                }
            ]
        }
        Rectangle {
            height: 20px;
            width: 20px;
            background: #ffffff;
            border-width: 1px;
            border-color: #000000;
            border-top-right-radius: 5px;
            border-bottom-right-radius: 5px;
            soloTouchArea := TouchArea { width: parent.width; height: parent.height; }
            Text { text: "S"; color: black; }
            states [
                hover when soloTouchArea.has-hover: {
                    background: #ffffaa;
                }
            ]
        }
    }
}

component Track inherits Rectangle {
    
    in property <string> name;
    in property <string> index;

    width: 100%;
    height: 70px;
    border-width: 1px;
    border-color: #000000;

    background: #eeeeee;

    VerticalLayout {
        padding: 10px;
        alignment: space-between;
        HorizontalLayout {
            
            alignment: space-between;

           

            
            Text {
                width: 20px;
                color: black;
                text: index;
            }

            Text {
                color: black;
                text: name;
            }

            MuteButtons {
                
            }

            

            
            
            
        }
        Rectangle {
            height: 20px;
            width: 100%;
            background: #000000;
            border-radius: 10px;
        }
    }
    
    

}

component TrackList inherits Rectangle {

    in property <[TrackData]> tracks;
    
    property <bool> darkflip: false;

    x: 0;
    y: 32px;
    preferred-height: 100%;
    width: 256px;
    background: #dddddd;

    VerticalLayout {
        for currentTrack[i] in tracks : Track {
            name: currentTrack.name;
            index: currentTrack.index;
        }
    }

}



export { TrackList }